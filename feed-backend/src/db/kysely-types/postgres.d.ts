/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface BondingCurve {
  bondingCurveId: string;
  coinMetadata: string;
  issuer: string;
  migrationTarget: string;
  treasuryCap: string;
}

export interface BuyEvents {
  amountIn: Int8;
  buyer: string;
  coinType: string;
  id: string;
  timestamp: Timestamp;
  tokenOut: Int8;
  txDigest: string;
}

export interface Comments {
  content: string;
  created_at: Timestamp;
  id: Int8;
  post_id: Int8;
  user_id: Int8;
}

export interface Cursors {
  eventSeq: string;
  id: string;
  txDigest: string;
}

export interface Likes {
  created_at: Timestamp;
  id: Int8;
  post_id: Int8;
  user_id: Int8;
}

export interface Posts {
  content: string;
  created_at: Timestamp;
  id: Int8;
  media_urls: string[] | null;
  user_id: Int8;
}

export interface RawPrices {
  amountIn: string;
  amountOut: string;
  bondingCurveId: string;
  direction: string;
  id: string;
  price: string;
  timestamp: Timestamp;
}

export interface SellEvents {
  amountOut: Int8;
  coinType: string;
  id: string;
  seller: string;
  timestamp: Timestamp;
  tokenIn: Int8;
  txDigest: string;
}

export interface Users {
  id: Int8;
  profile_picture_url: string;
  sui_address: string;
  username: string;
}

export interface DB {
  bonding_curve: BondingCurve;
  buy_events: BuyEvents;
  comments: Comments;
  cursors: Cursors;
  likes: Likes;
  posts: Posts;
  raw_prices: RawPrices;
  sell_events: SellEvents;
  users: Users;
}
